spring:
  application:
    name: ${APPLICATION_NAME:admin-service}
  security:
    user:
      name: "user"
      password: "password"
  boot:
    admin:
      client:
        username: "user"       #These two are needed so that the client
        password: "password"   #can register at the protected server api
        instance:
          metadata:
            user.name: "user"         #These two are needed so that the server
            user.password: "password" #can access the protected client endpoints
      discovery:
        enabled: true
      ui:
        #public-url: "http://${GATEWAY_HOST:127.0.0.1}:${GATEWAY_PORT:8080}/admin/"
        title: Administraci√≥n de Microservicios
server:
  port: ${APPLICATION_PORT:8095}
  name: ${APPLICATION_NAME:admin-service}

# tag::configuration-eureka[]
eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${server.port}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5
    health-check-url-path: /actuator/health
    metadata-map:
      startup: ${random.int}    #needed to trigger info and endpoint update after restart
  client:
    registry-fetch-interval-seconds: 5
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_HOST:host.docker.internal}:${EUREKA_PORT:8761}/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"  #<2>
  endpoint:
    health:
      show-details: ALWAYS
# end::configuration-eureka[]